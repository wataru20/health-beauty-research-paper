<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PubMed„Éá„Éº„Çø„ÇΩ„Éº„Çπ„Éì„É•„Éº„Ç¢„Éº</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
            min-height: 100vh;
            padding: 20px;
            color: #333;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
        }

        .header {
            background: white;
            border-radius: 15px;
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }

        h1 {
            color: #1e3c72;
            font-size: 2.5rem;
            margin-bottom: 10px;
        }

        .subtitle {
            color: #666;
            font-size: 1.1rem;
        }

        .stats-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: white;
            padding: 25px;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            text-align: center;
        }

        .stat-number {
            font-size: 2.5rem;
            font-weight: bold;
            color: #2a5298;
            margin-bottom: 5px;
        }

        .stat-label {
            color: #666;
            font-size: 1rem;
        }

        .filters {
            background: white;
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 30px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .filter-row {
            display: flex;
            gap: 15px;
            flex-wrap: wrap;
            align-items: center;
        }

        .filter-group {
            display: flex;
            flex-direction: column;
            gap: 5px;
        }

        label {
            font-weight: bold;
            color: #666;
            font-size: 0.9rem;
        }

        select, input {
            padding: 8px 12px;
            border: 2px solid #e0e0e0;
            border-radius: 5px;
            font-size: 1rem;
            transition: border-color 0.3s;
        }

        select:focus, input:focus {
            outline: none;
            border-color: #2a5298;
        }

        button {
            background: linear-gradient(135deg, #2a5298 0%, #1e3c72 100%);
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-weight: bold;
            transition: transform 0.2s;
        }

        button:hover {
            transform: translateY(-2px);
        }

        .papers-container {
            background: white;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .papers-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 2px solid #e0e0e0;
        }

        .papers-title {
            font-size: 1.5rem;
            color: #333;
        }

        .paper-count {
            color: #666;
            font-size: 1rem;
        }

        .papers-list {
            display: grid;
            gap: 15px;
        }

        .paper-card {
            border: 1px solid #e0e0e0;
            border-radius: 10px;
            padding: 20px;
            transition: all 0.3s;
            cursor: pointer;
        }

        .paper-card:hover {
            box-shadow: 0 5px 20px rgba(0,0,0,0.1);
            transform: translateY(-2px);
        }

        .paper-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 15px;
        }

        .paper-title {
            font-weight: bold;
            color: #1e3c72;
            font-size: 1.1rem;
            flex: 1;
            margin-right: 10px;
        }

        .paper-date {
            background: #f0f0f0;
            padding: 5px 10px;
            border-radius: 15px;
            font-size: 0.85rem;
            color: #666;
            white-space: nowrap;
        }

        .paper-authors {
            color: #666;
            font-size: 0.9rem;
            margin-bottom: 10px;
        }

        .paper-abstract {
            color: #444;
            line-height: 1.6;
            margin-bottom: 15px;
            max-height: 100px;
            overflow: hidden;
            text-overflow: ellipsis;
            display: -webkit-box;
            -webkit-line-clamp: 3;
            -webkit-box-orient: vertical;
        }

        .paper-expanded .paper-abstract {
            max-height: none;
            -webkit-line-clamp: unset;
        }

        .paper-meta {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-bottom: 10px;
        }

        .meta-tag {
            background: #e3f2fd;
            color: #1976d2;
            padding: 5px 10px;
            border-radius: 15px;
            font-size: 0.85rem;
        }

        .paper-keywords {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
            margin-bottom: 10px;
        }

        .keyword-tag {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 4px 10px;
            border-radius: 12px;
            font-size: 0.85rem;
        }

        .paper-actions {
            display: flex;
            gap: 10px;
            margin-top: 15px;
        }

        .action-link {
            color: #2a5298;
            text-decoration: none;
            font-size: 0.9rem;
            padding: 5px 10px;
            border: 1px solid #2a5298;
            border-radius: 5px;
            transition: all 0.3s;
        }

        .action-link:hover {
            background: #2a5298;
            color: white;
        }

        .loading {
            text-align: center;
            padding: 50px;
            color: #666;
        }

        .spinner {
            border: 4px solid #f3f3f3;
            border-top: 4px solid #2a5298;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 0 auto 20px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 10px;
            margin-top: 30px;
            padding-top: 20px;
            border-top: 2px solid #e0e0e0;
        }

        .page-btn {
            padding: 8px 12px;
            background: white;
            border: 2px solid #2a5298;
            color: #2a5298;
            border-radius: 5px;
            cursor: pointer;
            transition: all 0.3s;
        }

        .page-btn:hover:not(:disabled) {
            background: #2a5298;
            color: white;
        }

        .page-btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        .page-btn.active {
            background: #2a5298;
            color: white;
        }

        .page-info {
            color: #666;
            font-size: 0.9rem;
        }

        .export-btn {
            background: linear-gradient(135deg, #4caf50 0%, #45a049 100%);
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-weight: bold;
        }

        .chart-container {
            background: white;
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 30px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .chart-title {
            font-size: 1.3rem;
            color: #333;
            margin-bottom: 20px;
        }

        canvas {
            max-height: 300px;
        }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üìö PubMed„Éá„Éº„Çø„ÇΩ„Éº„Çπ„Éì„É•„Éº„Ç¢„Éº</h1>
            <div class="subtitle">ÂèéÈõÜ„Åó„ÅüÂÆüÈöõ„ÅÆÁ†îÁ©∂Ë´ñÊñá„Éá„Éº„Çø„ÇíÁ¢∫Ë™ç„ÉªÂàÜÊûê</div>
        </div>

        <div class="stats-container">
            <div class="stat-card">
                <div class="stat-number" id="totalPapers">0</div>
                <div class="stat-label">Á∑èË´ñÊñáÊï∞</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="uniqueAuthors">0</div>
                <div class="stat-label">ËëóËÄÖÊï∞</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="uniqueJournals">0</div>
                <div class="stat-label">„Ç∏„É£„Éº„Éä„É´Êï∞</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="yearRange">0</div>
                <div class="stat-label">„Éá„Éº„ÇøÊúüÈñì</div>
            </div>
        </div>

        <div class="chart-container">
            <div class="chart-title">üìä Âπ¥Âà•Ë´ñÊñáÊï∞Êé®Áßª</div>
            <canvas id="yearChart"></canvas>
        </div>

        <div class="chart-container">
            <div class="chart-title">üîç „Ç≠„Éº„ÉØ„Éº„ÉâÂà•Ë´ñÊñáÊï∞TOP10</div>
            <canvas id="keywordChart"></canvas>
        </div>

        <div class="filters">
            <div class="filter-row">
                <div class="filter-group">
                    <label for="yearFilter">Âπ¥Â∫¶</label>
                    <select id="yearFilter">
                        <option value="">ÂÖ®ÊúüÈñì</option>
                    </select>
                </div>
                <div class="filter-group">
                    <label for="keywordFilter">„Ç≠„Éº„ÉØ„Éº„Éâ</label>
                    <select id="keywordFilter">
                        <option value="">ÂÖ®„Ç≠„Éº„ÉØ„Éº„Éâ</option>
                    </select>
                </div>
                <div class="filter-group">
                    <label for="searchInput">„Çø„Ç§„Éà„É´Ê§úÁ¥¢</label>
                    <input type="text" id="searchInput" placeholder="Ê§úÁ¥¢„ÉØ„Éº„Éâ„ÇíÂÖ•Âäõ">
                </div>
                <button onclick="applyFilters()">„Éï„Ç£„É´„Çø„ÉºÈÅ©Áî®</button>
                <button onclick="resetFilters()">„É™„Çª„ÉÉ„Éà</button>
                <button class="export-btn" onclick="exportToCSV()">CSV„Ç®„ÇØ„Çπ„Éù„Éº„Éà</button>
            </div>
        </div>

        <div class="papers-container">
            <div class="papers-header">
                <div class="papers-title">üìÑ Ë´ñÊñá„É™„Çπ„Éà</div>
                <div class="paper-count">Ë°®Á§∫‰∏≠: <span id="displayCount">0</span>‰ª∂</div>
            </div>
            <div id="papersLoading" class="loading">
                <div class="spinner"></div>
                <div>„Éá„Éº„Çø„ÇíË™≠„ÅøËæº„Çì„Åß„ÅÑ„Åæ„Åô...</div>
            </div>
            <div id="papersList" class="papers-list" style="display: none;"></div>
            <div id="pagination" class="pagination" style="display: none;"></div>
        </div>
    </div>

    <script>
        let allPapers = [];
        let filteredPapers = [];
        let currentPage = 1;
        const papersPerPage = 20;

        // „Éá„Éº„ÇøË™≠„ÅøËæº„Åø
        async function loadData() {
            try {
                const response = await fetch('/api/raw_papers');
                const data = await response.json();

                // „Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„ÇíÈÖçÂàó„Å´Â§âÊèõ
                allPapers = Object.values(data);
                filteredPapers = [...allPapers];

                updateStatistics();
                populateFilters();
                createCharts();
                displayPapers();

                document.getElementById('papersLoading').style.display = 'none';
                document.getElementById('papersList').style.display = 'grid';
                document.getElementById('pagination').style.display = 'flex';
            } catch (error) {
                console.error('Error loading data:', error);
                // „É≠„Éº„Ç´„É´„Éï„Ç°„Ç§„É´„Åã„ÇâË™≠„ÅøËæº„ÅøÔºàÈñãÁô∫Áî®Ôºâ
                loadLocalData();
            }
        }

        // „É≠„Éº„Ç´„É´„Éá„Éº„ÇøË™≠„ÅøËæº„ÅøÔºà„Éï„Ç©„Éº„É´„Éê„ÉÉ„ÇØÔºâ
        async function loadLocalData() {
            try {
                const response = await fetch('database/master_papers.json');
                const data = await response.json();

                allPapers = Object.values(data);
                filteredPapers = [...allPapers];

                updateStatistics();
                populateFilters();
                createCharts();
                displayPapers();

                document.getElementById('papersLoading').style.display = 'none';
                document.getElementById('papersList').style.display = 'grid';
                document.getElementById('pagination').style.display = 'flex';
            } catch (error) {
                document.getElementById('papersLoading').innerHTML =
                    '<div style="color: red;">„Éá„Éº„Çø„ÅÆË™≠„ÅøËæº„Åø„Å´Â§±Êïó„Åó„Åæ„Åó„Åü</div>';
            }
        }

        // Áµ±Ë®àÊÉÖÂ†±Êõ¥Êñ∞
        function updateStatistics() {
            document.getElementById('totalPapers').textContent = allPapers.length.toLocaleString();

            const uniqueAuthors = new Set();
            const uniqueJournals = new Set();
            let minYear = 9999;
            let maxYear = 0;

            allPapers.forEach(paper => {
                if (paper.authors) {
                    paper.authors.forEach(author => uniqueAuthors.add(author));
                }
                if (paper.journal) {
                    uniqueJournals.add(paper.journal);
                }
                const year = parseInt(paper.publication_date?.split('-')[0]);
                if (!isNaN(year)) {
                    minYear = Math.min(minYear, year);
                    maxYear = Math.max(maxYear, year);
                }
            });

            document.getElementById('uniqueAuthors').textContent = uniqueAuthors.size.toLocaleString();
            document.getElementById('uniqueJournals').textContent = uniqueJournals.size.toLocaleString();
            document.getElementById('yearRange').textContent = `${minYear}-${maxYear}`;
        }

        // „Éï„Ç£„É´„Çø„ÉºÈÅ∏ÊäûËÇ¢„ÅÆÁîüÊàê
        function populateFilters() {
            const years = new Set();
            const keywords = new Set();

            allPapers.forEach(paper => {
                const year = paper.publication_date?.split('-')[0];
                if (year) years.add(year);

                if (paper.keywords) {
                    paper.keywords.forEach(keyword => keywords.add(keyword));
                }
            });

            // Âπ¥Â∫¶„Éï„Ç£„É´„Çø„Éº
            const yearFilter = document.getElementById('yearFilter');
            Array.from(years).sort((a, b) => b - a).forEach(year => {
                const option = document.createElement('option');
                option.value = year;
                option.textContent = year + 'Âπ¥';
                yearFilter.appendChild(option);
            });

            // „Ç≠„Éº„ÉØ„Éº„Éâ„Éï„Ç£„É´„Çø„Éº
            const keywordFilter = document.getElementById('keywordFilter');
            Array.from(keywords).sort().forEach(keyword => {
                const option = document.createElement('option');
                option.value = keyword;
                option.textContent = keyword;
                keywordFilter.appendChild(option);
            });
        }

        // „ÉÅ„É£„Éº„Éà‰ΩúÊàê
        function createCharts() {
            // Âπ¥Âà•Ë´ñÊñáÊï∞„ÉÅ„É£„Éº„Éà
            const yearCounts = {};
            allPapers.forEach(paper => {
                const year = paper.publication_date?.split('-')[0];
                if (year) {
                    yearCounts[year] = (yearCounts[year] || 0) + 1;
                }
            });

            const sortedYears = Object.keys(yearCounts).sort();
            const yearCtx = document.getElementById('yearChart').getContext('2d');
            new Chart(yearCtx, {
                type: 'line',
                data: {
                    labels: sortedYears,
                    datasets: [{
                        label: 'Ë´ñÊñáÊï∞',
                        data: sortedYears.map(year => yearCounts[year]),
                        borderColor: 'rgb(42, 82, 152)',
                        backgroundColor: 'rgba(42, 82, 152, 0.1)',
                        tension: 0.1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        }
                    }
                }
            });

            // „Ç≠„Éº„ÉØ„Éº„ÉâÂà•Ë´ñÊñáÊï∞„ÉÅ„É£„Éº„Éà
            const keywordCounts = {};
            allPapers.forEach(paper => {
                if (paper.keywords) {
                    paper.keywords.forEach(keyword => {
                        keywordCounts[keyword] = (keywordCounts[keyword] || 0) + 1;
                    });
                }
            });

            const topKeywords = Object.entries(keywordCounts)
                .sort((a, b) => b[1] - a[1])
                .slice(0, 10);

            const keywordCtx = document.getElementById('keywordChart').getContext('2d');
            new Chart(keywordCtx, {
                type: 'bar',
                data: {
                    labels: topKeywords.map(([keyword]) => keyword),
                    datasets: [{
                        label: 'Ë´ñÊñáÊï∞',
                        data: topKeywords.map(([, count]) => count),
                        backgroundColor: [
                            'rgba(102, 126, 234, 0.8)',
                            'rgba(118, 75, 162, 0.8)',
                            'rgba(240, 147, 251, 0.8)',
                            'rgba(245, 87, 108, 0.8)',
                            'rgba(250, 112, 154, 0.8)',
                            'rgba(102, 126, 234, 0.6)',
                            'rgba(118, 75, 162, 0.6)',
                            'rgba(240, 147, 251, 0.6)',
                            'rgba(245, 87, 108, 0.6)',
                            'rgba(250, 112, 154, 0.6)'
                        ]
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        }
                    }
                }
            });
        }

        // Ë´ñÊñáË°®Á§∫
        function displayPapers() {
            const start = (currentPage - 1) * papersPerPage;
            const end = start + papersPerPage;
            const pagePapers = filteredPapers.slice(start, end);

            const papersList = document.getElementById('papersList');
            papersList.innerHTML = '';

            pagePapers.forEach((paper, index) => {
                const paperCard = createPaperCard(paper, start + index + 1);
                papersList.appendChild(paperCard);
            });

            document.getElementById('displayCount').textContent = filteredPapers.length;
            createPagination();
        }

        // Ë´ñÊñá„Ç´„Éº„Éâ‰ΩúÊàê
        function createPaperCard(paper, number) {
            const card = document.createElement('div');
            card.className = 'paper-card';

            const authorsText = paper.authors ? paper.authors.slice(0, 3).join(', ') +
                (paper.authors.length > 3 ? ' ‰ªñ' : '') : 'ËëóËÄÖ‰∏çÊòé';

            const keywordsHtml = paper.keywords ?
                paper.keywords.map(k => `<span class="keyword-tag">${k}</span>`).join('') : '';

            const meshTermsHtml = paper.mesh_terms ?
                paper.mesh_terms.slice(0, 3).map(t => `<span class="meta-tag">${t}</span>`).join('') : '';

            card.innerHTML = `
                <div class="paper-header">
                    <div class="paper-title">#${number}. ${paper.title || '„Çø„Ç§„Éà„É´„Å™„Åó'}</div>
                    <div class="paper-date">${paper.publication_date || 'Êó•‰ªò‰∏çÊòé'}</div>
                </div>
                <div class="paper-authors">ËëóËÄÖ: ${authorsText}</div>
                <div class="paper-abstract">${paper.abstract || 'Ë¶ÅÁ¥Ñ„Å™„Åó'}</div>
                ${keywordsHtml ? `<div class="paper-keywords">${keywordsHtml}</div>` : ''}
                ${meshTermsHtml ? `<div class="paper-meta">${meshTermsHtml}</div>` : ''}
                <div class="paper-actions">
                    <a href="${paper.url}" target="_blank" class="action-link">PubMed„ÅßË¶ã„Çã</a>
                    <span class="action-link" onclick="toggleAbstract(this)">ÂÖ®ÊñáË°®Á§∫</span>
                </div>
            `;

            return card;
        }

        // Ë¶ÅÁ¥Ñ„ÅÆÂ±ïÈñã/Êäò„Çä„Åü„Åü„Åø
        function toggleAbstract(element) {
            const card = element.closest('.paper-card');
            card.classList.toggle('paper-expanded');
            element.textContent = card.classList.contains('paper-expanded') ? 'Êäò„Çä„Åü„Åü„ÇÄ' : 'ÂÖ®ÊñáË°®Á§∫';
        }

        // „Éö„Éº„Ç∏„Éç„Éº„Ç∑„Éß„É≥‰ΩúÊàê
        function createPagination() {
            const totalPages = Math.ceil(filteredPapers.length / papersPerPage);
            const pagination = document.getElementById('pagination');
            pagination.innerHTML = '';

            // Ââç„Å∏„Éú„Çø„É≥
            const prevBtn = document.createElement('button');
            prevBtn.className = 'page-btn';
            prevBtn.textContent = 'Ââç„Å∏';
            prevBtn.disabled = currentPage === 1;
            prevBtn.onclick = () => {
                if (currentPage > 1) {
                    currentPage--;
                    displayPapers();
                }
            };
            pagination.appendChild(prevBtn);

            // „Éö„Éº„Ç∏Áï™Âè∑
            const pageInfo = document.createElement('span');
            pageInfo.className = 'page-info';
            pageInfo.textContent = `${currentPage} / ${totalPages}`;
            pagination.appendChild(pageInfo);

            // Ê¨°„Å∏„Éú„Çø„É≥
            const nextBtn = document.createElement('button');
            nextBtn.className = 'page-btn';
            nextBtn.textContent = 'Ê¨°„Å∏';
            nextBtn.disabled = currentPage === totalPages;
            nextBtn.onclick = () => {
                if (currentPage < totalPages) {
                    currentPage++;
                    displayPapers();
                }
            };
            pagination.appendChild(nextBtn);
        }

        // „Éï„Ç£„É´„Çø„ÉºÈÅ©Áî®
        function applyFilters() {
            const yearFilter = document.getElementById('yearFilter').value;
            const keywordFilter = document.getElementById('keywordFilter').value;
            const searchInput = document.getElementById('searchInput').value.toLowerCase();

            filteredPapers = allPapers.filter(paper => {
                let match = true;

                if (yearFilter && !paper.publication_date?.startsWith(yearFilter)) {
                    match = false;
                }

                if (keywordFilter && (!paper.keywords || !paper.keywords.includes(keywordFilter))) {
                    match = false;
                }

                if (searchInput && !paper.title?.toLowerCase().includes(searchInput)) {
                    match = false;
                }

                return match;
            });

            currentPage = 1;
            displayPapers();
        }

        // „Éï„Ç£„É´„Çø„Éº„É™„Çª„ÉÉ„Éà
        function resetFilters() {
            document.getElementById('yearFilter').value = '';
            document.getElementById('keywordFilter').value = '';
            document.getElementById('searchInput').value = '';
            filteredPapers = [...allPapers];
            currentPage = 1;
            displayPapers();
        }

        // CSV„Ç®„ÇØ„Çπ„Éù„Éº„Éà
        function exportToCSV() {
            const headers = ['PMID', '„Çø„Ç§„Éà„É´', 'ËëóËÄÖ', 'Áô∫Ë°®Êó•', '„Ç∏„É£„Éº„Éä„É´', '„Ç≠„Éº„ÉØ„Éº„Éâ', 'URL'];
            const rows = filteredPapers.map(paper => [
                paper.pmid || '',
                paper.title || '',
                paper.authors ? paper.authors.join('; ') : '',
                paper.publication_date || '',
                paper.journal || '',
                paper.keywords ? paper.keywords.join('; ') : '',
                paper.url || ''
            ]);

            const csvContent = [headers, ...rows]
                .map(row => row.map(cell => `"${cell.replace(/"/g, '""')}"`).join(','))
                .join('\n');

            const blob = new Blob(['\ufeff' + csvContent], { type: 'text/csv;charset=utf-8;' });
            const link = document.createElement('a');
            link.href = URL.createObjectURL(blob);
            link.download = `pubmed_papers_${new Date().toISOString().split('T')[0]}.csv`;
            link.click();
        }

        // „Éö„Éº„Ç∏Ë™≠„ÅøËæº„ÅøÊôÇ„Å´„Éá„Éº„Çø„ÇíË™≠„ÅøËæº„ÇÄ
        window.onload = loadData;
    </script>
</body>
</html>